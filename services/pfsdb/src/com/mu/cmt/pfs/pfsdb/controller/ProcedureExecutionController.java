/*Copyright (c) 2016-2017 cmt.mu All Rights Reserved.
 This software is the confidential and proprietary information of cmt.mu You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with cmt.mu*/
package com.mu.cmt.pfs.pfsdb.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;

import com.mu.cmt.pfs.pfsdb.service.PfsdbProcedureExecutorService;
import com.mu.cmt.pfs.pfsdb.models.procedure.*;

@RestController(value = "Pfsdb.ProcedureExecutionController")
@RequestMapping("/pfsdb/procedureExecutor")
@Api(value = "ProcedureExecutionController", description = "controller class for procedure execution")
public class ProcedureExecutionController {

    private static final Logger LOGGER = LoggerFactory.getLogger(ProcedureExecutionController.class);

    @Autowired
    private PfsdbProcedureExecutorService procedureService;

    @RequestMapping(value = "/procedure/execute/procCS1000PK0_GetGmtReservQty", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get Gmt Reserv Qty")
    public ProcCs1000pk0GetGmtReservQtyResponse executeProcCS1000PK0_GetGmtReservQty(@RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pSourceOrdnum", required = false) String psourceOrdnum, @RequestParam(value = "pDestOrdnum", required = false) String pdestOrdnum, @RequestParam(value = "pTrnnum", required = false) String ptrnnum, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: procCS1000PK0_GetGmtReservQty");
        ProcCs1000pk0GetGmtReservQtyResponse _result = procedureService.executeProcCS1000PK0_GetGmtReservQty(pprgid, psourceOrdnum, pdestOrdnum, ptrnnum);
        LOGGER.debug("got the result for named procedure: procCS1000PK0_GetGmtReservQty, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/procCS1000PK0_CS411QryReservation", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "CS411 Qry Reservation")
    public ProcCs1000pk0Cs411qryReservationResponse executeProcCS1000PK0_CS411QryReservation(@RequestParam(value = "pOrdnum", required = false) String pordnum, @RequestParam(value = "pGMTSEQ", required = false) String pgmtseq, @RequestParam(value = "pCLRSEQ", required = false) Integer pclrseq, @RequestParam(value = "pSZESEQ", required = false) Integer pszeseq, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: procCS1000PK0_CS411QryReservation");
        ProcCs1000pk0Cs411qryReservationResponse _result = procedureService.executeProcCS1000PK0_CS411QryReservation(pordnum, pgmtseq, pclrseq, pszeseq);
        LOGGER.debug("got the result for named procedure: procCS1000PK0_CS411QryReservation, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/procCS1000PK0_CS411QryGmtStock", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get CS411 Qry Gmt Stock")
    public ProcCs1000pk0Cs411qryGmtStockResponse executeProcCS1000PK0_CS411QryGmtStock(@RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pOrdnum", required = false) String pordnum, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: procCS1000PK0_CS411QryGmtStock");
        ProcCs1000pk0Cs411qryGmtStockResponse _result = procedureService.executeProcCS1000PK0_CS411QryGmtStock(pprgid, pordnum);
        LOGGER.debug("got the result for named procedure: procCS1000PK0_CS411QryGmtStock, result:{}", _result);
        return _result;
    }

}